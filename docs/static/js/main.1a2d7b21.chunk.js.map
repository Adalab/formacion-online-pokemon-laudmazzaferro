{"version":3,"sources":["components/Filter.js","components/Pokemon.js","components/PokemonsList.js","components/PokemonDetail.js","App.js","services/fetchPokemons.js","index.js"],"names":["Filter","getInputPokemon","this","props","className","htmlFor","placeholder","id","type","name","onChange","React","Component","Pokemon","pokemon","src","sprites","front_default","alt","types","map","item","key","PokemonList","pokemons","inputPokemon","pokemonsFilter","filter","toUpperCase","includes","to","PokemonDetail","state","pokemonEvolution","getEvolution","bind","pokeId","parseInt","routerProps","match","params","fetch","then","response","json","info","evolves_from_species","setState","find","height","weight","abilities","ab","ability","App","getPokemons","data","pokeArr","results","url","Promise","all","event","newInput","currentTarget","value","exact","path","render","PokemonsList","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1a2d7b21.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './../styles/Filter.scss';\n\n\nclass Filter extends React.Component {\n  render() {\n    const {getInputPokemon } = this.props\n    return (\n      <div className=\"input__container\">\n        <label className=\"input__label\" htmlFor=\"input__pokemon\"></label>\n        <input  className=\"input__text\" placeholder=\"Pokemon Name..\" id=\"input__pokemon\" type=\"text\" name=\"input__pokemon\" onChange={getInputPokemon} />\n      </div>\n    );\n\n  }\n}\n\nFilter.propTypes = {\n  getInputPokemon:PropTypes.func.isRequired\n};\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './../styles/Pokemon.scss';\n\n\n\nclass Pokemon extends React.Component {\n\n  render() {\n    const { pokemon } = this.props;\n    return (\n      <div>\n        <div className=\"photo-id__container\">\n          <p className=\"pokemon__id\">ID/{pokemon.id}</p>\n          <img className=\"pokemon__img\" src={pokemon.sprites.front_default} alt=\"\" />\n        </div>\n        <div className=\"name-type__container\">\n          <h2 className=\"pokemon__name\">{pokemon.name}</h2>\n          <ul className=\"pokemon__types--list\">\n            {pokemon.types.map(item => {\n              return (\n                <li key={item.type.name} className=\"pokemon__type--item\"> {item.type.name}</li>\n              );\n            })}\n          </ul>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nPokemon.propTypes = {\n  pokemon: PropTypes.object.isRequired\n};\n\nexport default Pokemon;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Pokemon from './Pokemon';\nimport './../styles/PokemonList.scss';\n\n\n\nclass PokemonList extends React.Component {\n  render() {\n    const {pokemons , inputPokemon} = this.props\n    const pokemonsFilter =pokemons.filter(pokemon => pokemon.name.toUpperCase().includes(inputPokemon.toUpperCase()))\n    return (\n      <div className=\"pokemon__container\">\n        <ul className=\"pokemon__list\">\n          {pokemonsFilter\n          .map(pokemon =>{\n            return(\n\n              <li className=\"pokemon__item\" key={pokemon.name}>\n                <Link  className=\"pokemon__link\" to={`/pokemon-detail/${pokemon.id}`} >\n                  <Pokemon pokemon={pokemon}/>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n\n  }\n}\n\nPokemonList.propTypes = {\n  pokemons: PropTypes.array.isRequired,\n  inputPokemon:PropTypes.string.isRequired\n};\n\nexport default PokemonList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport './../styles/PokemonDetail.scss';\n\nclass PokemonDetail extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      pokemonEvolution:''\n    }\n    this.getEvolution=this.getEvolution.bind(this);\n  }\n  componentDidMount(){\n    this.getEvolution()\n  }\n\n  getEvolution(){\n    const pokeId = parseInt(this.props.routerProps.match.params.pokeId);\n    fetch(`https://pokeapi.co/api/v2/pokemon-species/${pokeId}`)\n    .then(response => response.json())\n    .then(info => {\n      if(info.evolves_from_species===null){\n        this.setState({\n          pokemonEvolution:'None'\n        })\n      }else{\n        this.setState({\n          pokemonEvolution:info.evolves_from_species.name\n        })\n      }\n    });\n  }\n\n\n  render() {\n    const { routerProps , pokemons } = this.props;\n    const pokeId = parseInt(routerProps.match.params.pokeId);\n    const pokemon = pokemons.find(item => item.id === pokeId); \n    if(pokemon){\n      return (\n        <div className=\"container__detail\">\n        <div className=\"photo-id__container\">\n          <p className=\"pokemon__id\">ID/{pokemon.id}</p>\n          <img className=\"pokemon__img\" src={pokemon.sprites.front_default} alt=\"\" />\n        </div>\n        <div className=\"name-type__container\">\n          <h2 className=\"pokemon__name\">{pokemon.name}</h2>\n          <p>Height: {pokemon.height}</p>\n          <p>Weight: {pokemon.weight}</p>\n          <ul className=\"pokemon__types--list\">\n            Types\n            {pokemon.types.map(item => {\n              return (\n                <li key={item.type.name} className=\"pokemon__type--item\"> {item.type.name}</li>\n              );\n            })}\n          </ul>\n          <ul className=\"pokemon__types--list\" >\n            Abilities\n            {pokemon.abilities.map(ab=>{\n              return(\n                <li key={ab.ability.name} className=\"pokemon__type--item\">{ab.ability.name}</li>\n              )\n            })}\n          </ul>\n          <h3 >Evolution: {this.state.pokemonEvolution}</h3>\n          <Link to='/' >Volver</Link>\n        </div>\n        \n        </div>\n      );\n    }else{\n      return (\n        <div>\n          pokemon no encontrado\n          <Link to='/' >Volver</Link>\n        </div>\n      );\n    }\n    \n  };\n};\n\nPokemonDetail.propTypes = {\n  routerProps:PropTypes.object.isRequired,\n  pokemons: PropTypes.array.isRequired\n};\n\nexport default PokemonDetail;","import React from 'react';\nimport {Switch , Route} from 'react-router-dom';\nimport {fetchPokemons} from './services/fetchPokemons';\nimport Filter from './components/Filter';\nimport PokemonsList from './components/PokemonsList';\nimport PokemonDetail from './components/PokemonDetail';\nimport './App.scss';\n\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      pokemons:[],\n      inputPokemon:'',\n    }\n    this.getPokemons=this.getPokemons.bind(this);\n    this.getInputPokemon= this.getInputPokemon.bind(this);\n  }\n\n  componentDidMount(){\n    this.getPokemons()\n  }\n\n  getPokemons(){\n    fetchPokemons()\n    .then(data => {\n      const pokeArr = data.results.map(item => {\n        return fetch(item.url)\n          .then(response => response.json());\n      });\n      return Promise.all(pokeArr);\n    })\n    .then(info => {\n      this.setState({\n        pokemons: info\n      });\n    })\n  }\n\n\n\n  getInputPokemon(event){\n    const newInput= event.currentTarget.value;\n    this.setState({\n      inputPokemon:newInput\n    })\n  }\n\n  render (){\n    const {pokemons ,inputPokemon } = this.state\n    return (\n      <div className=\"App\">\n        <header className=\"app_header\">\n          <h1 className=\"app__title\">Pokemons List</h1>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return (\n            <main className=\"app__main\">\n            <Filter getInputPokemon={this.getInputPokemon} />\n            <PokemonsList   pokemons={pokemons}  inputPokemon={inputPokemon}/>\n            </main>\n            );\n            }}\n          />\n          <Route path=\"/pokemon-detail/:pokeId\" render={routerProps => {\n            return (\n              <PokemonDetail \n              routerProps={routerProps}\n              pokemons={pokemons}\n              />\n            \n            );\n          }}/>\n\n        </Switch>\n        \n        <footer className=\"app__footer\">\n  \n        </footer>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const API = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=25'\n\nconst fetchPokemons= ()=>fetch(API).then(response => response.json())\n\n\nexport {fetchPokemons}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom' \n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}